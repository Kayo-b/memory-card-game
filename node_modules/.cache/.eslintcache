[{"/home/kayo-b/the_odin_project/memory-card-game/src/index.js":"1","/home/kayo-b/the_odin_project/memory-card-game/src/App.js":"2","/home/kayo-b/the_odin_project/memory-card-game/src/reportWebVitals.js":"3","/home/kayo-b/the_odin_project/memory-card-game/src/auxFunctions.js":"4","/home/kayo-b/the_odin_project/memory-card-game/src/components/Cards.js":"5","/home/kayo-b/the_odin_project/memory-card-game/src/components/Dialog.js":"6"},{"size":535,"mtime":1675680699276,"results":"7","hashOfConfig":"8"},{"size":6775,"mtime":1676285463065,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1675680699280,"results":"10","hashOfConfig":"8"},{"size":682,"mtime":1675966784140,"results":"11","hashOfConfig":"8"},{"size":549,"mtime":1675980154075,"results":"12","hashOfConfig":"8"},{"size":3257,"mtime":1676239622164,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"l8nl6a",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/home/kayo-b/the_odin_project/memory-card-game/src/index.js",[],[],[],"/home/kayo-b/the_odin_project/memory-card-game/src/App.js",["35","36","37"],[],"/home/kayo-b/the_odin_project/memory-card-game/src/reportWebVitals.js",[],[],"/home/kayo-b/the_odin_project/memory-card-game/src/auxFunctions.js",[],[],"/home/kayo-b/the_odin_project/memory-card-game/src/components/Cards.js",["38","39","40","41","42","43","44","45","46"],[],"import { setSelectionRange } from '@testing-library/user-event/dist/utils';\nimport React,  { useState, useEffect } from 'react';\nimport \"../Cards.css\"\n\nexport const Cards = ({childToParent}) => {\n\n    const [click, setClick] = useState(false);\n    const [score, setScore] = useState(0);\n    const [dum, setDum] = useState(\"not clicked\");\n    const [data, setData] = useState(\"Selected\")\n\n\n    const changeProps = () => {\n        setDum(\"Clicked\")\n   }\n    return  <div className=\"dummySquare\" onClick={() => childToParent(data)}></div>\n    \n\n    \n}\n","/home/kayo-b/the_odin_project/memory-card-game/src/components/Dialog.js",["47","48","49"],[],"import React, {useState, useEffect} from 'react'\n\nexport function Dialog({gameover, gameover2}) {\n    const [count, setCount] = useState(0);\n    const [count2, setCount2] = useState(0);\n    const [count3, setCount3] = useState(0);\n    const [countGameOver, setCoutGameOver] = useState(0);\n    const [gameoverPhrase, setGameover] = useState(\"Game over, try again. \");\n    const [victoryPhrase, setVictory] = useState(\"Congratulations.          You've achieved victory       .       .        .                        this time.\");\n    const [dialog, setDialog] = useState(\" \");\n    const [dialog2, setDialog2] = useState(\"\");\n    const [dialog3, setDialog3] = useState(\"\");\n\n    \n    let phrase1 = \"Greetings human. Welcome to my memory-card game inspired by the Warhammer 40k universe. The art was generated by Midjourney's AI. Instructions: Don't click on the same card twice.\"\n    console.log(\"Dialog Children Render\")\n\n    useEffect(() => {\n        const phraseSequence = () => {\n            if(gameover === false && dialog !== \"\") {\n                setTimeout(() => {\n    \n                    if(count < phrase1.length){\n                        setDialog(dialog + phrase1[count])\n                        setCount(count + 1)\n                    } else {\n                     clearTimeout()\n                     \n                    }\n                    }\n                    , 35);\n            } \n            else if(gameover === undefined) {\n                setTimeout(() => {\n                        \n                    console.log(\"gameover render on dialog component\")\n                    \n                    setDialog2(\"\")\n                    setDialog(\"\")\n                    \n                    if(count3 < victoryPhrase.length){\n                        setDialog3(dialog3 + victoryPhrase[count3])\n                        setCount3(count3 + 1)\n                    } else {\n\n                  \n                     clearTimeout()\n                    }; \n                    }\n                    , 35);\n\n            } else {\n               \n                    setTimeout(() => {\n                        setDialog(\"\")\n                        setDialog3(\"\")\n                        \n                        if(count2 < gameoverPhrase.length){\n                            setDialog2(dialog2 + gameoverPhrase[count2])\n                            setCount2(count2 + 1)\n                        } else {\n                            \n                            setCoutGameOver(countGameOver + 1)\n                            if(countGameOver > 3) {\n                                console.log(countGameOver)\n                                setDialog2(\"\")\n                                setCoutGameOver(0)\n                                \n                            }\n                            \n                      \n                         clearTimeout()\n                        }; \n                        }\n                        , 35);\n                \n    \n            }\n               \n            }\n\n        phraseSequence()\n\n       \n        return setCount2(0)\n    },[dialog, dialog2, gameover, dialog3])\n\n\n    return(\n\n        <div className=\"dialogBox\"><h4>{dialog}<br></br>{dialog2} <br></br>{dialog3}</h4></div>\n        \n    )\n\n    }\n",{"ruleId":"50","severity":1,"message":"51","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":3,"column":10,"nodeType":"52","messageId":"53","endLine":3,"endColumn":20},{"ruleId":"50","severity":1,"message":"55","line":6,"column":27,"nodeType":"52","messageId":"53","endLine":6,"endColumn":36},{"ruleId":"50","severity":1,"message":"56","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":27},{"ruleId":"50","severity":1,"message":"55","line":2,"column":28,"nodeType":"52","messageId":"53","endLine":2,"endColumn":37},{"ruleId":"50","severity":1,"message":"57","line":7,"column":12,"nodeType":"52","messageId":"53","endLine":7,"endColumn":17},{"ruleId":"50","severity":1,"message":"58","line":7,"column":19,"nodeType":"52","messageId":"53","endLine":7,"endColumn":27},{"ruleId":"50","severity":1,"message":"59","line":8,"column":12,"nodeType":"52","messageId":"53","endLine":8,"endColumn":17},{"ruleId":"50","severity":1,"message":"60","line":8,"column":19,"nodeType":"52","messageId":"53","endLine":8,"endColumn":27},{"ruleId":"50","severity":1,"message":"61","line":9,"column":12,"nodeType":"52","messageId":"53","endLine":9,"endColumn":15},{"ruleId":"50","severity":1,"message":"62","line":10,"column":18,"nodeType":"52","messageId":"53","endLine":10,"endColumn":25},{"ruleId":"50","severity":1,"message":"63","line":13,"column":11,"nodeType":"52","messageId":"53","endLine":13,"endColumn":22},{"ruleId":"50","severity":1,"message":"64","line":8,"column":28,"nodeType":"52","messageId":"53","endLine":8,"endColumn":39},{"ruleId":"50","severity":1,"message":"65","line":9,"column":27,"nodeType":"52","messageId":"53","endLine":9,"endColumn":37},{"ruleId":"66","severity":1,"message":"67","line":86,"column":7,"nodeType":"68","endLine":86,"endColumn":43,"suggestions":"69"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'randomizer' is defined but never used.","'useEffect' is defined but never used.","'setSelectionRange' is defined but never used.","'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","'dum' is assigned a value but never used.","'setData' is assigned a value but never used.","'changeProps' is assigned a value but never used.","'setGameover' is assigned a value but never used.","'setVictory' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'count', 'count2', 'count3', 'countGameOver', 'gameoverPhrase', 'phrase1', and 'victoryPhrase'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDialog' needs the current value of 'count'.","ArrayExpression",["70"],{"desc":"71","fix":"72"},"Update the dependencies array to be: [dialog, dialog2, gameover, dialog3, count, phrase1, count3, victoryPhrase, count2, gameoverPhrase, countGameOver]",{"range":"73","text":"74"},[3086,3122],"[dialog, dialog2, gameover, dialog3, count, phrase1, count3, victoryPhrase, count2, gameoverPhrase, countGameOver]"]