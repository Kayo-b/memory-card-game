{"ast":null,"code":"var _jsxFileName = \"/home/kayo-b/the_odin_project/memory-card-game/src/components/Dialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Dialog(_ref) {\n  _s();\n  let {\n    gameover,\n    gameover2\n  } = _ref;\n  const [count, setCount] = useState(0);\n  const [count2, setCount2] = useState(0);\n  const [count3, setCount3] = useState(0);\n  const [countGameOver, setCoutGameOver] = useState(0);\n  const [gameoverPhrase, setGameover] = useState(\"Game over, try again. \");\n  const [victoryPhrase, setVictory] = useState(\"Congratulations.          You've achieved victory       .       .        .                        this time.\");\n  const [dialog, setDialog] = useState(\" \");\n  const [dialog2, setDialog2] = useState(\"\");\n  const [dialog3, setDialog3] = useState(\"\");\n  let phrase1 = \"Greetings human. Welcome to my memory-card game inspired by the Warhammer 40k universe. The art was generated by Midjourney's AI. Instructions: Don't click on the same card twice.\";\n  useEffect(() => {\n    const phraseSequence = () => {\n      if (gameover === false && dialog !== \"\") {\n        setTimeout(() => {\n          if (count < phrase1.length) {\n            setDialog(dialog + phrase1[count]);\n            setCount(count + 1);\n          } else {\n            clearTimeout();\n          }\n        }, 35);\n      } else if (gameover === undefined) {\n        setTimeout(() => {\n          setDialog2(\"\");\n          setDialog(\"\");\n          if (count3 < victoryPhrase.length) {\n            setDialog3(dialog3 + victoryPhrase[count3]);\n            setCount3(count3 + 1);\n          } else {\n            clearTimeout();\n          }\n          ;\n        }, 35);\n      } else {\n        setTimeout(() => {\n          setDialog(\"\");\n          setDialog3(\"\");\n          setCount3(0);\n          if (count2 < gameoverPhrase.length) {\n            setDialog2(dialog2 + gameoverPhrase[count2]);\n            setCount2(count2 + 1);\n          } else {\n            setCoutGameOver(countGameOver + 1);\n            if (countGameOver > 3) {\n              console.log(countGameOver);\n              setDialog2(\"\");\n              setCoutGameOver(0);\n            }\n            clearTimeout();\n          }\n          ;\n        }, 35);\n      }\n    };\n    phraseSequence();\n    return setCount2(0);\n  }, [dialog, dialog2, gameover, dialog3]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dialogBox\",\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [dialog, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 48\n      }, this), dialog2, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 67\n      }, this), dialog3]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 36\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(Dialog, \"CztTW6iHIuiqpus5CaE85bxnWZM=\");\n_c = Dialog;\nvar _c;\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","gameover","gameover2","count","setCount","count2","setCount2","count3","setCount3","countGameOver","setCoutGameOver","gameoverPhrase","setGameover","victoryPhrase","setVictory","dialog","setDialog","dialog2","setDialog2","dialog3","setDialog3","phrase1","phraseSequence","setTimeout","length","clearTimeout","undefined","console","log"],"sources":["/home/kayo-b/the_odin_project/memory-card-game/src/components/Dialog.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n\nexport function Dialog({gameover, gameover2}) {\n    const [count, setCount] = useState(0);\n    const [count2, setCount2] = useState(0);\n    const [count3, setCount3] = useState(0);\n    const [countGameOver, setCoutGameOver] = useState(0);\n    const [gameoverPhrase, setGameover] = useState(\"Game over, try again. \");\n    const [victoryPhrase, setVictory] = useState(\"Congratulations.          You've achieved victory       .       .        .                        this time.\");\n    const [dialog, setDialog] = useState(\" \");\n    const [dialog2, setDialog2] = useState(\"\");\n    const [dialog3, setDialog3] = useState(\"\");\n\n    \n    let phrase1 = \"Greetings human. Welcome to my memory-card game inspired by the Warhammer 40k universe. The art was generated by Midjourney's AI. Instructions: Don't click on the same card twice.\"\n \n\n    useEffect(() => {\n        const phraseSequence = () => {\n            if(gameover === false && dialog !== \"\") {\n                setTimeout(() => {\n    \n                    if(count < phrase1.length){\n                        setDialog(dialog + phrase1[count])\n                        setCount(count + 1)\n                    } else {\n                     clearTimeout()\n                     \n                    }\n                    }\n                    , 35);\n            } \n            else if(gameover === undefined) {\n                setTimeout(() => {   \n                    setDialog2(\"\")\n                    setDialog(\"\")\n                    \n                    if(count3 < victoryPhrase.length){\n                        setDialog3(dialog3 + victoryPhrase[count3])\n                        setCount3(count3 + 1)\n                    } else {\n\n                  \n                     clearTimeout()\n                    }; \n                    }\n                    , 35);\n\n            } else {\n               \n                    setTimeout(() => {\n                        setDialog(\"\")\n                        setDialog3(\"\")\n                        setCount3(0)\n                        \n                        if(count2 < gameoverPhrase.length){\n                            setDialog2(dialog2 + gameoverPhrase[count2])\n                            setCount2(count2 + 1)\n                        } else {\n                            \n                            setCoutGameOver(countGameOver + 1)\n                            if(countGameOver > 3) {\n                                console.log(countGameOver)\n                                setDialog2(\"\")\n                                setCoutGameOver(0)\n                                \n                            }\n                            \n                      \n                         clearTimeout()\n                        }; \n                        }\n                        , 35);\n                \n    \n            }\n               \n            }\n\n        phraseSequence()\n\n       \n        return setCount2(0)\n    },[dialog, dialog2, gameover, dialog3])\n\n\n    return(\n\n        <div className=\"dialogBox\"><h4>{dialog}<br></br>{dialog2} <br></br>{dialog3}</h4></div>\n        \n    )\n\n    }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}