{"ast":null,"code":"import _slicedToArray from\"/home/kayo-b/the_odin_project/memory-card-game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Dialog(_ref){var gameover=_ref.gameover,gameover2=_ref.gameover2;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),count2=_useState4[0],setCount2=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),count3=_useState6[0],setCount3=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),countGameOver=_useState8[0],setCoutGameOver=_useState8[1];var _useState9=useState(\"Game over, try again. \"),_useState10=_slicedToArray(_useState9,2),gameoverPhrase=_useState10[0],setGameover=_useState10[1];var _useState11=useState(\"Congratulations.          You've achieved victory       .       .        .                        this time.\"),_useState12=_slicedToArray(_useState11,2),victoryPhrase=_useState12[0],setVictory=_useState12[1];var _useState13=useState(\" \"),_useState14=_slicedToArray(_useState13,2),dialog=_useState14[0],setDialog=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),dialog2=_useState16[0],setDialog2=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),dialog3=_useState18[0],setDialog3=_useState18[1];var phrase1=\"Greetings human. Welcome to my memory-card game inspired by the Warhammer 40k universe. The art was generated by Midjourney's AI. Instructions: Don't click on the same card twice.\";useEffect(function(){var phraseSequence=function phraseSequence(){if(gameover===false&&dialog!==\"\"){setTimeout(function(){if(count<phrase1.length){setDialog(dialog+phrase1[count]);setCount(count+1);}else{clearTimeout();}},35);}else if(gameover===undefined){setTimeout(function(){setDialog2(\"\");setDialog(\"\");if(count3<victoryPhrase.length){setDialog3(dialog3+victoryPhrase[count3]);setCount3(count3+1);}else{clearTimeout();};},35);}else{setTimeout(function(){setDialog(\"\");setDialog3(\"\");setCount3(0);if(count2<gameoverPhrase.length){setDialog2(dialog2+gameoverPhrase[count2]);setCount2(count2+1);}else{setCoutGameOver(countGameOver+1);if(countGameOver>3){console.log(countGameOver);setDialog2(\"\");setCoutGameOver(0);}clearTimeout();};},35);}};phraseSequence();return setCount2(0);},[dialog,dialog2,gameover,dialog3]);return/*#__PURE__*/_jsx(\"div\",{className:\"dialogBox\",children:/*#__PURE__*/_jsxs(\"h4\",{children:[dialog,/*#__PURE__*/_jsx(\"br\",{}),dialog2,/*#__PURE__*/_jsx(\"br\",{}),dialog3]})});}","map":{"version":3,"names":["React","useState","useEffect","Dialog","gameover","gameover2","count","setCount","count2","setCount2","count3","setCount3","countGameOver","setCoutGameOver","gameoverPhrase","setGameover","victoryPhrase","setVictory","dialog","setDialog","dialog2","setDialog2","dialog3","setDialog3","phrase1","phraseSequence","setTimeout","length","clearTimeout","undefined","console","log"],"sources":["/home/kayo-b/the_odin_project/memory-card-game/src/components/Dialog.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n\nexport function Dialog({gameover, gameover2}) {\n    const [count, setCount] = useState(0);\n    const [count2, setCount2] = useState(0);\n    const [count3, setCount3] = useState(0);\n    const [countGameOver, setCoutGameOver] = useState(0);\n    const [gameoverPhrase, setGameover] = useState(\"Game over, try again. \");\n    const [victoryPhrase, setVictory] = useState(\"Congratulations.          You've achieved victory       .       .        .                        this time.\");\n    const [dialog, setDialog] = useState(\" \");\n    const [dialog2, setDialog2] = useState(\"\");\n    const [dialog3, setDialog3] = useState(\"\");\n\n    \n    let phrase1 = \"Greetings human. Welcome to my memory-card game inspired by the Warhammer 40k universe. The art was generated by Midjourney's AI. Instructions: Don't click on the same card twice.\"\n \n\n    useEffect(() => {\n\n        const phraseSequence = () => {\n\n            if(gameover === false && dialog !== \"\") {\n                setTimeout(() => {\n    \n                    if(count < phrase1.length){\n                        setDialog(dialog + phrase1[count])\n                        setCount(count + 1)\n                    } else {\n                     clearTimeout()\n                     \n                    }\n                    }\n                    , 35);\n            } else if(gameover === undefined) {\n                setTimeout(() => {   \n                    setDialog2(\"\")\n                    setDialog(\"\")\n                    \n                    if(count3 < victoryPhrase.length){\n                        setDialog3(dialog3 + victoryPhrase[count3])\n                        setCount3(count3 + 1)\n                    } else {\n\n                  \n                     clearTimeout()\n                    }; \n                    }\n                    , 35);\n\n            } else {\n               \n                    setTimeout(() => {\n                        setDialog(\"\")\n                        setDialog3(\"\")\n                        setCount3(0)\n                        \n                        if(count2 < gameoverPhrase.length){\n                            setDialog2(dialog2 + gameoverPhrase[count2])\n                            setCount2(count2 + 1)\n                        } else {\n                            \n                            setCoutGameOver(countGameOver + 1)\n                            if(countGameOver > 3) {\n                                console.log(countGameOver)\n                                setDialog2(\"\")\n                                setCoutGameOver(0)\n                                \n                            }\n                            \n                      \n                         clearTimeout()\n                        }; \n                        }\n                        , 35);\n                \n    \n            }\n               \n            }\n\n        phraseSequence()\n\n       \n        return setCount2(0)\n    },[dialog, dialog2, gameover, dialog3])\n\n\n    return(\n\n        <div className=\"dialogBox\"><h4>{dialog}<br></br>{dialog2}<br></br>{dialog3}</h4></div>\n        \n    )\n\n    }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}